{"version":3,"file":"main.bundle.js","sources":["webpack:///./~/rxjs/add/observable/of.js","webpack:///./src/source/app/about/about.component.ts","webpack:///./src/source/app/about/index.ts","webpack:///./src/source/app/app.component.ts","webpack:///./src/source/app/app.module.ts","webpack:///./src/source/app/app.resolver.ts","webpack:///./src/source/app/app.routes.ts","webpack:///./src/source/app/app.service.ts","webpack:///./src/source/app/app.style.css","webpack:///./src/source/app/environment.ts","webpack:///./src/source/app/home/home.component.ts","webpack:///./src/source/app/home/home.style.css","webpack:///./src/source/app/home/home.template.html","webpack:///./src/source/app/home/index.ts","webpack:///./src/source/app/home/title/index.ts","webpack:///./src/source/app/home/title/title.service.ts","webpack:///./src/source/app/home/x-large/index.ts","webpack:///./src/source/app/home/x-large/x-large.directive.ts","webpack:///./src/source/app/index.ts","webpack:///./src/source/app/no-content/index.ts","webpack:///./src/source/app/no-content/no-content.ts","webpack:///./src/source/main.browser.ts"],"sourcesContent":["\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar of_1 = require('../../observable/of');\nObservable_1.Observable.of = of_1.of;\n//# sourceMappingURL=of.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/observable/of.js\n// module id = ./node_modules/rxjs/add/observable/of.js\n// module chunks = 2","import { Component } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\n/*\r\n * We're loading this component asynchronously\r\n * We are using some magic with es6-promise-loader that will wrap the module with a Promise\r\n * see https://github.com/gdi2290/es6-promise-loader for more info\r\n */\r\n\r\nconsole.log('`About` component loaded asynchronously');\r\n\r\n@Component({\r\n  selector: 'about',\r\n  styles: [`\r\n  `],\r\n  template: `\r\n    <h1>About</h1>\r\n    <div>\r\n      For hot module reloading run\r\n      <pre>npm run start:hmr</pre>\r\n    </div>\r\n    <div>\r\n      <h3>\r\n        patrick@AngularClass.com\r\n      </h3>\r\n    </div>\r\n    <pre>this.localState = {{ localState | json }}</pre>\r\n  `\r\n})\r\nexport class About {\r\n  localState;\r\n  constructor(public route: ActivatedRoute) {\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.route\r\n      .data\r\n      .subscribe((data: any) => {\r\n        // your resolved data from route\r\n        this.localState = data.yourData;\r\n      });\r\n\r\n    console.log('hello `About` component');\r\n    // static data that is bundled\r\n    // var mockData = require('assets/mock-data/mock-data.json');\r\n    // console.log('mockData', mockData);\r\n    // if you're working with mock data you can also use http.get('assets/mock-data/mock-data.json')\r\n    // this.asyncDataWithWebpack();\r\n  }\r\n  asyncDataWithWebpack() {\r\n    // you can also async load mock data with 'es6-promise-loader'\r\n    // you would do this if you don't want the mock-data bundled\r\n    // remember that 'es6-promise-loader' is a promise\r\n    // var asyncMockDataPromiseFactory = require('es6-promise!assets/mock-data/mock-data.json');\r\n    // setTimeout(() => {\r\n    //\r\n    //   let asyncDataPromise = asyncMockDataPromiseFactory();\r\n    //   asyncDataPromise.then(json => {\r\n    //     console.log('async mockData', json);\r\n    //   });\r\n    //\r\n    // });\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/@angularclass/hmr-loader!./~/string-replace-loader?{\"search\":\"(System|SystemJS)(.*[/n/r]/s*/.|/.)import/((.+)/)\",\"replace\":\"$1.import($3).then(mod => mod.__esModule ? mod.default : mod)\",\"flags\":\"g\"}!./src/source/app/about/about.component.ts","export * from './about.component';\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/@angularclass/hmr-loader!./~/string-replace-loader?{\"search\":\"(System|SystemJS)(.*[/n/r]/s*/.|/.)import/((.+)/)\",\"replace\":\"$1.import($3).then(mod => mod.__esModule ? mod.default : mod)\",\"flags\":\"g\"}!./src/source/app/about/index.ts","/*\r\n * Angular 2 decorators and services\r\n */\r\nimport { Component, ViewEncapsulation } from '@angular/core';\r\n\r\nimport { AppState } from './app.service';\r\n\r\n/*\r\n * App Component\r\n * Top Level Component\r\n */\r\n@Component({\r\n  selector: 'app',\r\n  encapsulation: ViewEncapsulation.None,\r\n  styles: [\r\n    require('./app.style.css')\r\n  ],\r\n  template: `\r\n    <nav>\r\n      <span>\r\n        <a [routerLink]=\" ['./'] \">\r\n          Index\r\n        </a>\r\n      </span>\r\n      |\r\n      <span>\r\n        <a [routerLink]=\" ['./home'] \">\r\n          Home\r\n        </a>\r\n      </span>\r\n      |\r\n      <span>\r\n        <a [routerLink]=\" ['./detail'] \">\r\n          Detail\r\n        </a>\r\n      </span>\r\n      |\r\n      <span>\r\n        <a [routerLink]=\" ['./about'] \">\r\n          About\r\n        </a>\r\n      </span>\r\n    </nav>\r\n\r\n    <main>\r\n      <router-outlet></router-outlet>\r\n    </main>\r\n\r\n    <pre class=\"app-state\">this.appState.state = {{ appState.state | json }}</pre>\r\n\r\n    <footer>\r\n      <span>WebPack Angular 2 Starter by <a [href]=\"url\">@AngularClass</a></span>\r\n      <div>\r\n        <a [href]=\"url\">\r\n          <img [src]=\"angularclassLogo\" width=\"25%\">\r\n        </a>\r\n      </div>\r\n    </footer>\r\n  `\r\n})\r\nexport class App {\r\n  angularclassLogo = 'assets/img/angularclass-avatar.png';\r\n  name = 'Angular 2 Webpack Starter';\r\n  url = 'https://twitter.com/AngularClass';\r\n\r\n  constructor(\r\n    public appState: AppState) {\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    console.log('Initial App State', this.appState.state);\r\n  }\r\n\r\n}\r\n\r\n/*\r\n * Please review the https://github.com/AngularClass/angular2-examples/ repo for\r\n * more angular app examples that you may copy/paste\r\n * (The examples may not be updated as quickly. Please open an issue on github for us to update it)\r\n * For help or questions please contact us at @AngularClass on twitter\r\n * or our chat on Slack at https://AngularClass.com/slack-join\r\n */\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/@angularclass/hmr-loader!./~/string-replace-loader?{\"search\":\"(System|SystemJS)(.*[/n/r]/s*/.|/.)import/((.+)/)\",\"replace\":\"$1.import($3).then(mod => mod.__esModule ? mod.default : mod)\",\"flags\":\"g\"}!./src/source/app/app.component.ts","import { NgModule, ApplicationRef } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpModule } from '@angular/http';\r\nimport { RouterModule } from '@angular/router';\r\nimport { removeNgStyles, createNewHosts } from '@angularclass/hmr';\r\n\r\n/*\r\n * Platform and Environment providers/directives/pipes\r\n */\r\nimport { ENV_PROVIDERS } from './environment';\r\nimport { ROUTES } from './app.routes';\r\n// App is our top level component\r\nimport { App } from './app.component';\r\nimport { APP_RESOLVER_PROVIDERS } from './app.resolver';\r\nimport { AppState } from './app.service';\r\nimport { Home } from './home';\r\nimport { About } from './about';\r\nimport { NoContent } from './no-content';\r\nimport { XLarge } from './home/x-large';\r\n\r\n// Application wide providers\r\nconst APP_PROVIDERS = [\r\n  ...APP_RESOLVER_PROVIDERS,\r\n  AppState\r\n];\r\n\r\n/**\r\n * `AppModule` is the main entry point into Angular2's bootstraping process\r\n */\r\n@NgModule({\r\n  bootstrap: [ App ],\r\n  declarations: [\r\n    App,\r\n    About,\r\n    Home,\r\n    NoContent,\r\n    XLarge\r\n  ],\r\n  imports: [ // import Angular's modules\r\n    BrowserModule,\r\n    FormsModule,\r\n    HttpModule,\r\n    RouterModule.forRoot(ROUTES, { useHash: true })\r\n  ],\r\n  providers: [ // expose our Services and Providers into Angular's dependency injection\r\n    ENV_PROVIDERS,\r\n    APP_PROVIDERS\r\n  ]\r\n})\r\nexport class AppModule {\r\n  constructor(public appRef: ApplicationRef, public appState: AppState) {}\r\n  hmrOnInit(store) {\r\n    if (!store || !store.state) return;\r\n    console.log('HMR store', store);\r\n    this.appState._state = store.state;\r\n    this.appRef.tick();\r\n    delete store.state;\r\n  }\r\n  hmrOnDestroy(store) {\r\n    const cmpLocation = this.appRef.components.map(cmp => cmp.location.nativeElement);\r\n    // recreate elements\r\n    const state = this.appState._state;\r\n    store.state = state;\r\n    store.disposeOldHosts = createNewHosts(cmpLocation);\r\n    // remove styles\r\n    removeNgStyles();\r\n  }\r\n  hmrAfterDestroy(store) {\r\n    // display new elements\r\n    store.disposeOldHosts();\r\n    delete store.disposeOldHosts;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/@angularclass/hmr-loader!./~/string-replace-loader?{\"search\":\"(System|SystemJS)(.*[/n/r]/s*/.|/.)import/((.+)/)\",\"replace\":\"$1.import($3).then(mod => mod.__esModule ? mod.default : mod)\",\"flags\":\"g\"}!./src/source/app/app.module.ts","import { Resolve, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport 'rxjs/add/observable/of';\r\n\r\n@Injectable()\r\nexport class DataResolver implements Resolve<any> {\r\n  constructor() {\r\n\r\n  }\r\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\r\n    return Observable.of({ res: 'I am data'});\r\n  }\r\n}\r\n\r\n// an array of services to resolve routes with data\r\nexport const APP_RESOLVER_PROVIDERS = [\r\n  DataResolver\r\n];\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/@angularclass/hmr-loader!./~/string-replace-loader?{\"search\":\"(System|SystemJS)(.*[/n/r]/s*/.|/.)import/((.+)/)\",\"replace\":\"$1.import($3).then(mod => mod.__esModule ? mod.default : mod)\",\"flags\":\"g\"}!./src/source/app/app.resolver.ts","import { Routes, RouterModule } from '@angular/router';\r\nimport { Home } from './home';\r\nimport { About } from './about';\r\nimport { NoContent } from './no-content';\r\n\r\nimport { DataResolver } from './app.resolver';\r\n\r\n\r\nexport const ROUTES: Routes = [\r\n  { path: '',      component: Home },\r\n  { path: 'home',  component: Home },\r\n  { path: 'about', component: About },\r\n  {\r\n    path: 'detail', loadChildren: () => System.import('./+detail').then(mod => mod.__esModule ? mod.default : mod)\r\n  },\r\n  { path: '**',    component: NoContent },\r\n];\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/@angularclass/hmr-loader!./~/string-replace-loader?{\"search\":\"(System|SystemJS)(.*[/n/r]/s*/.|/.)import/((.+)/)\",\"replace\":\"$1.import($3).then(mod => mod.__esModule ? mod.default : mod)\",\"flags\":\"g\"}!./src/source/app/app.routes.ts","import { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class AppState {\r\n  _state = { };\r\n\r\n  constructor() {\r\n\r\n  }\r\n\r\n  // already return a clone of the current state\r\n  get state() {\r\n    return this._state = this._clone(this._state);\r\n  }\r\n  // never allow mutation\r\n  set state(value) {\r\n    throw new Error('do not mutate the `.state` directly');\r\n  }\r\n\r\n\r\n  get(prop?: any) {\r\n    // use our state getter for the clone\r\n    const state = this.state;\r\n    return state.hasOwnProperty(prop) ? state[prop] : state;\r\n  }\r\n\r\n  set(prop: string, value: any) {\r\n    // internally mutate our state\r\n    return this._state[prop] = value;\r\n  }\r\n\r\n\r\n  _clone(object) {\r\n    // simple object clone\r\n    return JSON.parse(JSON.stringify( object ));\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/@angularclass/hmr-loader!./~/string-replace-loader?{\"search\":\"(System|SystemJS)(.*[/n/r]/s*/.|/.)import/((.+)/)\",\"replace\":\"$1.import($3).then(mod => mod.__esModule ? mod.default : mod)\",\"flags\":\"g\"}!./src/source/app/app.service.ts","module.exports = \"html, body{\\r\\n  height: 100%;\\r\\n  font-family: Arial, Helvetica, sans-serif\\r\\n}\\r\\n\\r\\nspan.active {\\r\\n  background-color: gray;\\r\\n}\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/source/app/app.style.css\n// module id = ./src/source/app/app.style.css\n// module chunks = 2","\r\n// Angular 2\r\n// rc2 workaround\r\nimport { enableDebugTools, disableDebugTools } from '@angular/platform-browser';\r\nimport { enableProdMode, ApplicationRef } from '@angular/core';\r\n// Environment Providers\r\nlet PROVIDERS = [\r\n  // common env directives\r\n];\r\n\r\n// Angular debug tools in the dev console\r\n// https://github.com/angular/angular/blob/86405345b781a9dc2438c0fbe3e9409245647019/TOOLS_JS.md\r\nlet _decorateModuleRef = function identity(value) { return value; };\r\n\r\nif ('production' === ENV) {\r\n  // Production\r\n  disableDebugTools();\r\n  enableProdMode();\r\n\r\n  PROVIDERS = [\r\n    ...PROVIDERS,\r\n    // custom providers in production\r\n  ];\r\n\r\n} else {\r\n\r\n  _decorateModuleRef = (modRef: any) => {\r\n    const appRef = modRef.injector.get(ApplicationRef);\r\n    const cmpRef = appRef.components[0];\r\n\r\n    let _ng = (<any>window).ng;\r\n    enableDebugTools(cmpRef);\r\n    (<any>window).ng.probe = _ng.probe;\r\n    (<any>window).ng.coreTokens = _ng.coreTokens;\r\n    return modRef;\r\n  };\r\n\r\n  // Development\r\n  PROVIDERS = [\r\n    ...PROVIDERS,\r\n    // custom providers in development\r\n  ];\r\n\r\n}\r\n\r\nexport const decorateModuleRef = _decorateModuleRef;\r\n\r\nexport const ENV_PROVIDERS = [\r\n  ...PROVIDERS\r\n];\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/@angularclass/hmr-loader!./~/string-replace-loader?{\"search\":\"(System|SystemJS)(.*[/n/r]/s*/.|/.)import/((.+)/)\",\"replace\":\"$1.import($3).then(mod => mod.__esModule ? mod.default : mod)\",\"flags\":\"g\"}!./src/source/app/environment.ts","import { Component } from '@angular/core';\r\n\r\nimport { AppState } from '../app.service';\r\nimport { Title } from './title';\r\nimport { XLarge } from './x-large';\r\n\r\n@Component({\r\n  // The selector is what angular internally uses\r\n  // for `document.querySelectorAll(selector)` in our index.html\r\n  // where, in this case, selector is the string 'home'\r\n  selector: 'home',  // <home></home>\r\n  // We need to tell Angular's Dependency Injection which providers are in our app.\r\n  providers: [\r\n    Title\r\n  ],\r\n  // Our list of styles in our component. We may add more to compose many styles together\r\n  styles: [ require('./home.style.css') ],\r\n  // Every Angular template is first compiled by the browser before Angular runs it's compiler\r\n  template: require('./home.template.html')\r\n})\r\nexport class Home {\r\n  // Set our default values\r\n  localState = { value: '' };\r\n  // TypeScript public modifiers\r\n  constructor(public appState: AppState, public title: Title) {\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    console.log('hello `Home` component');\r\n    // this.title.getData().subscribe(data => this.data = data);\r\n  }\r\n\r\n  submitState(value) {\r\n    console.log('submitState', value);\r\n    this.appState.set('value', value);\r\n    this.localState.value = '';\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/@angularclass/hmr-loader!./~/string-replace-loader?{\"search\":\"(System|SystemJS)(.*[/n/r]/s*/.|/.)import/((.+)/)\",\"replace\":\"$1.import($3).then(mod => mod.__esModule ? mod.default : mod)\",\"flags\":\"g\"}!./src/source/app/home/home.component.ts","module.exports = \"/*styles for home content only*/\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/source/app/home/home.style.css\n// module id = ./src/source/app/home/home.style.css\n// module chunks = 2","module.exports = \"<div class=\\\"card-container\\\">\\r\\n  <h1 x-large class=\\\"sample-content\\\">Your Content Here</h1>\\r\\n\\r\\n  <div>\\r\\n    For material design components use the <a href=\\\"https://github.com/AngularClass/angular2-webpack-starter/tree/material2\\\"><b>material2</b></a> branch\\r\\n  </div>\\r\\n\\r\\n  <hr>\\r\\n\\r\\n  <div>\\r\\n    For hot module reloading run\\r\\n    <pre>npm run start:hmr</pre>\\r\\n  </div>\\r\\n\\r\\n  <hr>\\r\\n\\r\\n  <div>\\r\\n    <h4>Local State</h4>\\r\\n\\r\\n    <form (ngSubmit)=\\\"submitState(localState.value)\\\" autocomplete=\\\"off\\\">\\r\\n\\r\\n      <input\\r\\n        [value]=\\\"localState.value\\\"\\r\\n        (input)=\\\"localState.value = $event.target.value\\\"\\r\\n        placeholder=\\\"Submit Local State to App State\\\"\\r\\n        autofocus>\\r\\n\\r\\n      <button md-raised-button color=\\\"primary\\\">Submit Value</button>\\r\\n    </form>\\r\\n    <!--\\r\\n        <input type=\\\"text\\\" [value]=\\\"localState.value\\\" (input)=\\\"localState.value = $event.target.value\\\" autofocus>\\r\\n        Rather than wiring up two-way data-binding ourselves with [value] and (input)\\r\\n        we can use Angular's [(ngModel)] syntax\\r\\n        <input type=\\\"text\\\" name=\\\"textInput\\\" [(ngModel)]=\\\"localState.value\\\" autofocus>\\r\\n      -->\\r\\n\\r\\n    <pre>this.localState = {{ localState | json }}</pre>\\r\\n\\r\\n  </div>\\r\\n\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/source/app/home/home.template.html\n// module id = ./src/source/app/home/home.template.html\n// module chunks = 2","export * from './home.component';\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/@angularclass/hmr-loader!./~/string-replace-loader?{\"search\":\"(System|SystemJS)(.*[/n/r]/s*/.|/.)import/((.+)/)\",\"replace\":\"$1.import($3).then(mod => mod.__esModule ? mod.default : mod)\",\"flags\":\"g\"}!./src/source/app/home/index.ts","export * from './title.service';\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/@angularclass/hmr-loader!./~/string-replace-loader?{\"search\":\"(System|SystemJS)(.*[/n/r]/s*/.|/.)import/((.+)/)\",\"replace\":\"$1.import($3).then(mod => mod.__esModule ? mod.default : mod)\",\"flags\":\"g\"}!./src/source/app/home/title/index.ts","import { Injectable } from '@angular/core';\r\nimport { Http } from '@angular/http';\r\n\r\n@Injectable()\r\nexport class Title {\r\n  value = 'Angular 2';\r\n  constructor(public http: Http) {\r\n\r\n  }\r\n\r\n  getData() {\r\n    console.log('Title#getData(): Get Data');\r\n    // return this.http.get('/assets/data.json')\r\n    // .map(res => res.json());\r\n    return {\r\n      value: 'AngularClass'\r\n    };\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/@angularclass/hmr-loader!./~/string-replace-loader?{\"search\":\"(System|SystemJS)(.*[/n/r]/s*/.|/.)import/((.+)/)\",\"replace\":\"$1.import($3).then(mod => mod.__esModule ? mod.default : mod)\",\"flags\":\"g\"}!./src/source/app/home/title/title.service.ts","export * from './x-large.directive';\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/@angularclass/hmr-loader!./~/string-replace-loader?{\"search\":\"(System|SystemJS)(.*[/n/r]/s*/.|/.)import/((.+)/)\",\"replace\":\"$1.import($3).then(mod => mod.__esModule ? mod.default : mod)\",\"flags\":\"g\"}!./src/source/app/home/x-large/index.ts","import { Component, Directive, ElementRef, Renderer } from '@angular/core';\r\n/*\r\n * Directive\r\n * XLarge is a simple directive to show how one is made\r\n */\r\n@Directive({\r\n  selector: '[x-large]' // using [ ] means selecting attributes\r\n})\r\nexport class XLarge {\r\n  constructor(element: ElementRef, renderer: Renderer) {\r\n    // simple DOM manipulation to set font size to x-large\r\n    // `nativeElement` is the direct reference to the DOM element\r\n    // element.nativeElement.style.fontSize = 'x-large';\r\n\r\n    // for server/webworker support use the renderer\r\n    renderer.setElementStyle(element.nativeElement, 'fontSize', 'x-large');\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/@angularclass/hmr-loader!./~/string-replace-loader?{\"search\":\"(System|SystemJS)(.*[/n/r]/s*/.|/.)import/((.+)/)\",\"replace\":\"$1.import($3).then(mod => mod.__esModule ? mod.default : mod)\",\"flags\":\"g\"}!./src/source/app/home/x-large/x-large.directive.ts","// App\r\nexport * from './app.module';\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/@angularclass/hmr-loader!./~/string-replace-loader?{\"search\":\"(System|SystemJS)(.*[/n/r]/s*/.|/.)import/((.+)/)\",\"replace\":\"$1.import($3).then(mod => mod.__esModule ? mod.default : mod)\",\"flags\":\"g\"}!./src/source/app/index.ts","export * from './no-content';\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/@angularclass/hmr-loader!./~/string-replace-loader?{\"search\":\"(System|SystemJS)(.*[/n/r]/s*/.|/.)import/((.+)/)\",\"replace\":\"$1.import($3).then(mod => mod.__esModule ? mod.default : mod)\",\"flags\":\"g\"}!./src/source/app/no-content/index.ts","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'no-content',\r\n  template: `\r\n    <div>\r\n      <h1>404: page missing</h1>\r\n    </div>\r\n  `\r\n})\r\nexport class NoContent {\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/@angularclass/hmr-loader!./~/string-replace-loader?{\"search\":\"(System|SystemJS)(.*[/n/r]/s*/.|/.)import/((.+)/)\",\"replace\":\"$1.import($3).then(mod => mod.__esModule ? mod.default : mod)\",\"flags\":\"g\"}!./src/source/app/no-content/no-content.ts","/*\r\n * Angular bootstraping\r\n */\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\nimport { decorateModuleRef } from './app/environment';\r\nimport { ApplicationRef } from '@angular/core';\r\nimport { bootloader } from '@angularclass/hmr';\r\n/*\r\n * App Module\r\n * our top level module that holds all of our components\r\n */\r\nimport { AppModule } from './app';\r\n\r\n/*\r\n * Bootstrap our Angular app with a top level NgModule\r\n */\r\nexport function main(): Promise<any> {\r\n  return platformBrowserDynamic()\r\n    .bootstrapModule(AppModule).then(function(MODULE_REF) {if (module[\"hot\"]) {\nmodule[\"hot\"][\"accept\"]();\n\nif (MODULE_REF.instance[\"hmrOnInit\"]) {\nMODULE_REF.instance[\"hmrOnInit\"](module[\"hot\"][\"data\"]);\n}\nif (MODULE_REF.instance[\"hmrOnStatus\"]) {\nmodule[\"hot\"][\"apply\"](function(status) {\nMODULE_REF.instance[\"hmrOnStatus\"](status);\n});\n}\nif (MODULE_REF.instance[\"hmrOnCheck\"]) {\nmodule[\"hot\"][\"check\"](function(err, outdatedModules) {\nMODULE_REF.instance[\"hmrOnCheck\"](err, outdatedModules);\n});\n}\nif (MODULE_REF.instance[\"hmrOnDecline\"]) {\nmodule[\"hot\"][\"decline\"](function(dependencies) {\nMODULE_REF.instance[\"hmrOnDecline\"](dependencies);\n});\n}\nmodule[\"hot\"][\"dispose\"](function(store) {\nMODULE_REF.instance[\"hmrOnDestroy\"] && MODULE_REF.instance[\"hmrOnDestroy\"](store);\nMODULE_REF.destroy();\nMODULE_REF.instance[\"hmrAfterDestroy\"] && MODULE_REF.instance[\"hmrAfterDestroy\"](store);\n });\n}\nreturn MODULE_REF;\n})\r\n    .then(decorateModuleRef)\r\n    .catch(err => console.error(err));\r\n\r\n}\r\n\r\n\r\nbootloader(main);\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/@angularclass/hmr-loader!./~/string-replace-loader?{\"search\":\"(System|SystemJS)(.*[/n/r]/s*/.|/.)import/((.+)/)\",\"replace\":\"$1.import($3).then(mod => mod.__esModule ? mod.default : mod)\",\"flags\":\"g\"}!./src/source/main.browser.ts"],"mappings":";;;;;;;AAAA;AACA;AACA;AACA;AACA;;;;;;;;;ACJA;AACA;AACA;;;;AAIA;AAEA;AAoBA;AAEA;AAAA;AAEA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AApDA;AAAA;AACA;AACA;AAEA;AAaA;;AAAA;AAqCA;;AAAA;AApCA;;;;;;;;;;;;;AC5BA;;;;;;;;;;ACAA;;AAEA;AACA;AAEA;AAEA;;;AAGA;AAkDA;AAKA;AACA;AALA;AACA;AACA;AAKA;AAEA;AACA;AACA;AA7DA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AA0CA;;AAAA;AAeA;;AAAA;AAdA;AAgBA;;;;;;AAMA;;;;;;;;;;AClFA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;;AAEA;AAqBA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA1CA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAAA;AAwBA;;AAAA;AAvBA;;;;;;;;;;ACjDA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AAPA;AAAA;;AAAA;AAQA;AAAA;AAPA;AASA;AACA;AACA;AACA;;;;;;;;;;ACjBA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;AChBA;AAGA;AAGA;AAFA;AAIA;AAGA;AADA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAJA;AAOA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAjCA;AAAA;;AAAA;AAkCA;AAAA;AAjCA;;;;;;;;ACHA;;;;;;;;;ACCA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAKA;AAAA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAKA;AAEA;AAEA;;;;;;;;;;AC/CA;AAEA;AACA;AAiBA;AAGA;AACA;AAAA;AAAA;AAHA;AACA;AAIA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AA/BA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAAA;AAmBA;;AAAA;AAlBA;;;;;;;;ACpBA;;;;;;;ACAA;;;;;;;;;;;;ACAA;;;;;;;;;;;;;ACAA;;;;;;;;;;ACAA;AACA;AAGA;AAEA;AAAA;AADA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAdA;AAAA;;AAAA;AAgBA;;AAAA;AAfA;;;;;;;;;;;;;ACJA;;;;;;;;;;ACAA;AACA;;;AAGA;AAIA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAXA;AAAA;AACA;AACA;;AAAA;AAUA;;AAAA;AATA;;;;;;;;;;;;;ACRA;AACA;;;;;;;;;;;;;ACDA;;;;;;;;;;ACAA;AAUA;AAAA;AAEA;AAVA;AAAA;AACA;AACA;AAKA;;AAAA;AAGA;AAAA;AAFA;;;;;;;;;;ACVA;;AAEA;AACA;AACA;AAEA;AACA;;;AAGA;AACA;AAEA;;AAEA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAlCA;AAqCA;;;;;","sourceRoot":""}